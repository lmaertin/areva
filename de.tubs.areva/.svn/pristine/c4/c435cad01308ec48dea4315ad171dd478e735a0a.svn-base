/**
 */
package de.tubs.areva.emf.model.darg.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;
import de.tubs.areva.emf.model.darg.Architecture;
import de.tubs.areva.emf.model.darg.DargPackage;
import de.tubs.areva.emf.model.darg.QualityAssignment;
import de.tubs.areva.emf.model.qadag.QADAG;
import de.tubs.areva.resourcerelations.Resource;
import de.tubs.areva.resourcerelations.ResourceGroup;
import java.util.Collection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Architecture</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getId <em>Id</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getQuality <em>Quality</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getQadag <em>Qadag</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getFollowingArchitectures <em>Following Architectures</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getUsedResources <em>Used Resources</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getUsedResourceGroups <em>Used Resource Groups</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#getQualities <em>Qualities</em>}</li>
 *   <li>{@link de.tubs.areva.emf.model.darg.impl.ArchitectureImpl#isOptimal <em>Optimal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArchitectureImpl extends MinimalEObjectImpl.Container implements Architecture {
	/**
	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected String id = ID_EDEFAULT;

	/**
	 * The default value of the '{@link #getQuality() <em>Quality</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getQuality()
	 * @generated
	 * @ordered
	 */
	protected static final double QUALITY_EDEFAULT = 0.0;

	/**
	 * The cached value of the '{@link #getQuality() <em>Quality</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getQuality()
	 * @generated
	 * @ordered
	 */
	protected double quality = QUALITY_EDEFAULT;

	/**
	 * The cached value of the '{@link #getQadag() <em>Qadag</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getQadag()
	 * @generated
	 * @ordered
	 */
	protected QADAG qadag;

	/**
	 * The cached value of the '{@link #getFollowingArchitectures() <em>Following Architectures</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getFollowingArchitectures()
	 * @generated
	 * @ordered
	 */
	protected EList<Architecture> followingArchitectures;

	/**
	 * The cached value of the '{@link #getUsedResources() <em>Used Resources</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUsedResources()
	 * @generated
	 * @ordered
	 */
	protected EList<Resource> usedResources;

	/**
	 * The cached value of the '{@link #getUsedResourceGroups() <em>Used Resource Groups</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getUsedResourceGroups()
	 * @generated
	 * @ordered
	 */
	protected EList<ResourceGroup> usedResourceGroups;

	/**
	 * The cached value of the '{@link #getQualities() <em>Qualities</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getQualities()
	 * @generated
	 * @ordered
	 */
	protected EList<QualityAssignment> qualities;

	/**
	 * The default value of the '{@link #isOptimal() <em>Optimal</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isOptimal()
	 * @generated
	 * @ordered
	 */
	protected static final boolean OPTIMAL_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isOptimal() <em>Optimal</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isOptimal()
	 * @generated
	 * @ordered
	 */
	protected boolean optimal = OPTIMAL_EDEFAULT;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return DargPackage.Literals.ARCHITECTURE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getId() {
		return id;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setId(String newId) {
		String oldId = id;
		id = newId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DargPackage.ARCHITECTURE__ID, oldId, id));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public double getQuality() {
		return quality;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setQuality(double newQuality) {
		double oldQuality = quality;
		quality = newQuality;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DargPackage.ARCHITECTURE__QUALITY, oldQuality, quality));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public QADAG getQadag() {
		return qadag;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetQadag(QADAG newQadag, NotificationChain msgs) {
		QADAG oldQadag = qadag;
		qadag = newQadag;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DargPackage.ARCHITECTURE__QADAG, oldQadag, newQadag);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setQadag(QADAG newQadag) {
		if (newQadag != qadag) {
			NotificationChain msgs = null;
			if (qadag != null)
				msgs = ((InternalEObject)qadag).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DargPackage.ARCHITECTURE__QADAG, null, msgs);
			if (newQadag != null)
				msgs = ((InternalEObject)newQadag).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DargPackage.ARCHITECTURE__QADAG, null, msgs);
			msgs = basicSetQadag(newQadag, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DargPackage.ARCHITECTURE__QADAG, newQadag, newQadag));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Architecture> getFollowingArchitectures() {
		if (followingArchitectures == null) {
			followingArchitectures = new EObjectResolvingEList<Architecture>(Architecture.class, this, DargPackage.ARCHITECTURE__FOLLOWING_ARCHITECTURES);
		}
		return followingArchitectures;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Resource> getUsedResources() {
		if (usedResources == null) {
			usedResources = new EObjectResolvingEList<Resource>(Resource.class, this, DargPackage.ARCHITECTURE__USED_RESOURCES);
		}
		return usedResources;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ResourceGroup> getUsedResourceGroups() {
		if (usedResourceGroups == null) {
			usedResourceGroups = new EObjectResolvingEList<ResourceGroup>(ResourceGroup.class, this, DargPackage.ARCHITECTURE__USED_RESOURCE_GROUPS);
		}
		return usedResourceGroups;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<QualityAssignment> getQualities() {
		if (qualities == null) {
			qualities = new EObjectContainmentEList<QualityAssignment>(QualityAssignment.class, this, DargPackage.ARCHITECTURE__QUALITIES);
		}
		return qualities;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isOptimal() {
		return optimal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setOptimal(boolean newOptimal) {
		boolean oldOptimal = optimal;
		optimal = newOptimal;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, DargPackage.ARCHITECTURE__OPTIMAL, oldOptimal, optimal));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case DargPackage.ARCHITECTURE__QADAG:
				return basicSetQadag(null, msgs);
			case DargPackage.ARCHITECTURE__QUALITIES:
				return ((InternalEList<?>)getQualities()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case DargPackage.ARCHITECTURE__ID:
				return getId();
			case DargPackage.ARCHITECTURE__QUALITY:
				return getQuality();
			case DargPackage.ARCHITECTURE__QADAG:
				return getQadag();
			case DargPackage.ARCHITECTURE__FOLLOWING_ARCHITECTURES:
				return getFollowingArchitectures();
			case DargPackage.ARCHITECTURE__USED_RESOURCES:
				return getUsedResources();
			case DargPackage.ARCHITECTURE__USED_RESOURCE_GROUPS:
				return getUsedResourceGroups();
			case DargPackage.ARCHITECTURE__QUALITIES:
				return getQualities();
			case DargPackage.ARCHITECTURE__OPTIMAL:
				return isOptimal();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case DargPackage.ARCHITECTURE__ID:
				setId((String)newValue);
				return;
			case DargPackage.ARCHITECTURE__QUALITY:
				setQuality((Double)newValue);
				return;
			case DargPackage.ARCHITECTURE__QADAG:
				setQadag((QADAG)newValue);
				return;
			case DargPackage.ARCHITECTURE__FOLLOWING_ARCHITECTURES:
				getFollowingArchitectures().clear();
				getFollowingArchitectures().addAll((Collection<? extends Architecture>)newValue);
				return;
			case DargPackage.ARCHITECTURE__USED_RESOURCES:
				getUsedResources().clear();
				getUsedResources().addAll((Collection<? extends Resource>)newValue);
				return;
			case DargPackage.ARCHITECTURE__USED_RESOURCE_GROUPS:
				getUsedResourceGroups().clear();
				getUsedResourceGroups().addAll((Collection<? extends ResourceGroup>)newValue);
				return;
			case DargPackage.ARCHITECTURE__QUALITIES:
				getQualities().clear();
				getQualities().addAll((Collection<? extends QualityAssignment>)newValue);
				return;
			case DargPackage.ARCHITECTURE__OPTIMAL:
				setOptimal((Boolean)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case DargPackage.ARCHITECTURE__ID:
				setId(ID_EDEFAULT);
				return;
			case DargPackage.ARCHITECTURE__QUALITY:
				setQuality(QUALITY_EDEFAULT);
				return;
			case DargPackage.ARCHITECTURE__QADAG:
				setQadag((QADAG)null);
				return;
			case DargPackage.ARCHITECTURE__FOLLOWING_ARCHITECTURES:
				getFollowingArchitectures().clear();
				return;
			case DargPackage.ARCHITECTURE__USED_RESOURCES:
				getUsedResources().clear();
				return;
			case DargPackage.ARCHITECTURE__USED_RESOURCE_GROUPS:
				getUsedResourceGroups().clear();
				return;
			case DargPackage.ARCHITECTURE__QUALITIES:
				getQualities().clear();
				return;
			case DargPackage.ARCHITECTURE__OPTIMAL:
				setOptimal(OPTIMAL_EDEFAULT);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case DargPackage.ARCHITECTURE__ID:
				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
			case DargPackage.ARCHITECTURE__QUALITY:
				return quality != QUALITY_EDEFAULT;
			case DargPackage.ARCHITECTURE__QADAG:
				return qadag != null;
			case DargPackage.ARCHITECTURE__FOLLOWING_ARCHITECTURES:
				return followingArchitectures != null && !followingArchitectures.isEmpty();
			case DargPackage.ARCHITECTURE__USED_RESOURCES:
				return usedResources != null && !usedResources.isEmpty();
			case DargPackage.ARCHITECTURE__USED_RESOURCE_GROUPS:
				return usedResourceGroups != null && !usedResourceGroups.isEmpty();
			case DargPackage.ARCHITECTURE__QUALITIES:
				return qualities != null && !qualities.isEmpty();
			case DargPackage.ARCHITECTURE__OPTIMAL:
				return optimal != OPTIMAL_EDEFAULT;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (id: ");
		result.append(id);
		result.append(", quality: ");
		result.append(quality);
		result.append(", optimal: ");
		result.append(optimal);
		result.append(')');
		return result.toString();
	}

} //ArchitectureImpl
