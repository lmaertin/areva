package de.tubs.areva.transaction.commands;

import java.io.IOException;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;

import org.eclipse.emf.common.command.Command;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.transaction.TransactionalEditingDomain;

import de.tubs.areva.emf.model.qadag.File;
import de.tubs.areva.emf.model.qadag.QadagFactory;
import de.tubs.areva.emf.model.qadag.QualityAspect;
import de.tubs.areva.util.QADAGHelper;

public class CreateQadagModelCommand implements Command {

	TransactionalEditingDomain domain = null;
	URI outputURI = null;
	ResourceSet resourceSet = null;
	
	File blueprintQadag = null;
	String architectureName = "";
	String[][] candidatesFile;
	
	File createdQadag = null;
	private int i;
	
	public CreateQadagModelCommand(TransactionalEditingDomain domain, URI outputURI, File blueprintQadag, String architectureName, String[][] candidatesFile, int i) {
		
		this.domain = domain;
		this.outputURI = outputURI;
		
		resourceSet = domain.getResourceSet();
		
		this.blueprintQadag = blueprintQadag;
		this.architectureName = architectureName;
		this.candidatesFile = candidatesFile;
		this.i = i;
	}
	
	public File getCreatedQadag() {
		return createdQadag;
	}
	
	@Override
	public boolean canExecute() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public void execute() {
		// TODO Auto-generated method stub
		createdQadag = blueprintQadag;
		
		for (int j = 0; j < 3; j++) {
			
			QualityAspect aspect = QadagFactory.eINSTANCE.createQualityAspect();
			aspect.setName(candidatesFile[0][j].split(":")[0]);
			aspect.setValue(Float.parseFloat(candidatesFile[i][j]));
			
			createdQadag.getQualityAspects().add(aspect);
		}
		
		createdQadag.setName(architectureName);
		createdQadag.getRoot().setName(architectureName);
		
		QADAGHelper.setValueFromAspectsRecursive(createdQadag, createdQadag.getRoot());
		
		final Resource resource = resourceSet.createResource(outputURI);
		resource.getContents().add(createdQadag);
		
		try {
		    resource.save(Collections.EMPTY_MAP);
		} catch (IOException e) {
			System.out.println("ERROR IO Exception");
		    throw new RuntimeException(e);
		}
		
		System.out.println("Created new Qadag");
	}

	@Override
	public boolean canUndo() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void undo() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void redo() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Collection<?> getResult() {
		// TODO Auto-generated method stub
		return new HashSet<>();
	}

	@Override
	public Collection<?> getAffectedObjects() {
		// TODO Auto-generated method stub
		return new HashSet<>();
	}

	@Override
	public String getLabel() {
		// TODO Auto-generated method stub
		return "CreateQadagModel";
	}

	@Override
	public String getDescription() {
		// TODO Auto-generated method stub
		return "CreateQadagModel";
	}

	@Override
	public void dispose() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Command chain(Command command) {
		// TODO Auto-generated method stub
		return command;
	}

}
